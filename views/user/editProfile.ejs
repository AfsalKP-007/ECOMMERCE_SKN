<%- include('../partials/user/header') %>



<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Test Page</title>

    
    <!-- Use absolute paths starting with "/" -->

    <!-- Use absolute paths starting with "/" -->
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <!-- Updated Font Awesome CDN to a more stable version -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">
    <link href="/css/tiny-slider.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">

    <link rel="shortcut icon" href="/public/favicon.png">

</head>


<style>

    .bodystyle{
        width: 100%;
        height: 100%;
    }
    .profile-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
        background-color: #fff;
        border-radius: 0.75rem;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .profile-header {
        text-align: center;
        margin-bottom: 2rem;
    }

    .profile-img {
        width: 150px;
        height: 150px;
        object-fit: cover;
        border: 4px solid #f59e0b;
        border-radius: 50%;
        transition: transform 0.3s ease;
    }

    .profile-img:hover {
        transform: scale(1.05);
    }

    .form-section {
        background-color: #ffffff;
        padding: 1.5rem;
        border-radius: 0.5rem;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
        margin-bottom: 1.5rem;
    }

    .form-section h2 {
        color: #1f2937;
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .form-control {
        background-color: #f9fafb;
        border: 1px solid #d1d5db;
        border-radius: 0.375rem;
        padding: 0.5rem 1rem;
        color: #1f2937;
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }

    .form-control:focus {
        border-color: #f59e0b;
        box-shadow: 0 0 0 3px rgba(245, 158, 11, 0.2);
        outline: none;
    }

    .btn-custom {
        background-color: #00BFFF;
        color: #ffffff;
        padding: 0.5rem 1.5rem;
        border-radius: 0.375rem;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

    .btn-custom:hover {
        background-color: #2563eb;
        transform: translateY(-2px);
    }

    .change-photo-btn {
        margin-top: 1rem;
    }
    .hidden {
            display: none !important; /* Explicitly hide the input */
        }

    @media (min-width: 400px) {
        .grid-container {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1.5rem;
            
        }
    }

    @media (max-width: 767px) {
        .grid-container {
            grid-template-columns: 1fr;
        }
        .profile-img {
            width: 120px;
            height: 120px;
        }
    }
</style>
</head>

<body class="bodystyle" >

    
<br> <br>

<div class=" bodystyle">
    <!-- Profile Picture Section -->

    <div class="profile-header">
        <h1 class="text-3xl font-bold text-amber-500">Edit Profile</h1>
        <div class="mt-4">
            <img id="profilePhoto" 
                 src="<%= userData.photo ? userData.photo : 'images/Messi signup.jpg' %>"
                 class="profile-img"
                 alt="Profile Photo">
            <form id="profilePicForm" data-user-id="<%= userData._id %>" class="text-center change-photo-btn" enctype="multipart/form-data">
              
                <input type="file" id="profileImage" name="profileImage" accept="image/*" class="hidden" >
                <button type="button" 
                        onclick="document.getElementById('profileImage').click()"
                        class="btn-custom">
                    <i class="fas fa-camera mr-2"></i> Change Photo
                </button>
            </form>
        </div>
    </div>

    <div class="grid-container" style="margin-left: 50px;">
        <!-- Personal Information Form -->
        <div class="form-section">
            <h2>Personal Information</h2>
            <form id="profileForm" action="/userProfile/edit/<%= userData._id %>" method="POST" class="space-y-4">
                <div class="space-y-2">
                    <label class="block text-gray-600">Name</label>
                    <input type="text" 
                           name="name" 
                           value="<%= userData.name %>"
                           class="form-control" 
                           >


                </div>

                <div class="space-y-2">
                    <label class="block text-gray-600">User Name</label>
                    <input type="text" 
                           name="username" 
                           value="<%= userData.username %>"
                           class="form-control" 
                           >
                </div>

                <div class="space-y-2">
                    <label class="block text-gray-600">Phone Number</label>
                    <input type="tel" 
                           name="phone" 
                           value="<%= userData.phone %>"
                           class="form-control">
                </div>

                
                <br> <br>

                <button type="submit" class="btn-custom">Save Changes</button>
            </form>
        </div>

        <!-- Change Email -->
        <div class="form-section">
            <h2>Change Email</h2>
            <form action="/changeEmail" method="GET" class="space-y-4">
                <div class="space-y-2">
                    <label class="block text-gray-600">Email</label>
                    <h5 class="form-control" type="email"  name="email"  >  <%= userData.email %> </h5>
                </div>

                
                <br> <br>

                <button type="submit" class="btn-custom">Change Your Email</button>
            </form>
        </div>

        <!-- Change Password -->
        <div class="form-section" style="margin-right: 50px;">
            <h2>Change Password</h2>
            <form id="changePasswordForm" class="space-y-4">
                <div class="space-y-2">
                    <label class="block text-gray-600">Current Password</label>
                    <input id="currentPassword" 
                           type="password" 
                           name="currentPassword" 
                           class="form-control">
                    <small id="currentPasswordError" class="text-danger"></small>
                </div>

                <div class="space-y-2">
                    <label class="block text-gray-600">New Password</label>
                    <input id="newPassword" type="password" 
                           name="newPassword" 
                           class="form-control">

                    <small id="newPasswordError" class="text-danger"></small>

                </div>

                <div class="space-y-2">
                    <label class="block text-gray-600">Confirm New Password</label>
                    <input id="confirmPassword" type="password" 
                           name="confirmPassword" 
                           class="form-control">
                          
                <small id="confirmPasswordError" class="text-danger"></small>

                </div>

                
                <br> <br>

                <button type="submit" class="btn-custom">Change Password</button>
            </form>
        </div>
    </div>
</div>

<br> <br>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>



<script>


    const form = document.getElementById('profilePicForm');
    const userId = form.dataset.userId;


    document.getElementById('profileImage').addEventListener('change', function (e) {
        const file = e.target.files[0];
        if (!file) return;


        const formData = new FormData();
        formData.append('profileImage', file);

        fetch(`/upload-profile-pic/${userId}`, {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                  
                    document.getElementById("profilePhoto").src = data.imagePath;

                    Swal.fire('Success!', 'Profile picture updated successfully.', 'success');
                } else {
                    Swal.fire('Error!', 'Failed to upload image.', 'error');
                }
            })
            .catch(error => Swal.fire('Error!', 'Something went wrong.', 'error'));
    });


    function togglePassword(inputId, icon) {
        const input = document.getElementById(inputId);
        if (input.type === "password") {
            input.type = "text";
            icon.classList.add('bi-eye-slash-fill');
            icon.classList.remove('bi-eye-fill');
        } else {
            input.type = "password";
            icon.classList.add('bi-eye-fill');
            icon.classList.remove('bi-eye-slash-fill');
        }
    }


    document.getElementById('profileForm').addEventListener('submit', async (e) => {

        e.preventDefault();
        
        const formData = new FormData(e.target);
        const data = Object.fromEntries(formData.entries());

    
        try {
            const response = await fetch('/updateProfile', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            });
    
            const result = await response.json();
    
            if (result.success) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Profile updated successfully',
                    timer: 2000,
                    showConfirmButton: false
                });

                window.location.reload();

            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: result.message,
                });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'An unexpected error occurred. Please try again.',
            });
        }
    });

    document.getElementById('changePasswordForm').addEventListener('submit', async (e) => {
    e.preventDefault();

    
    // Reset error messages
    document.getElementById('currentPasswordError').textContent = '';
    document.getElementById('newPasswordError').textContent = '';
    document.getElementById('confirmPasswordError').textContent = '';

    const currentPassword = document.getElementById('currentPassword').value;
    const newPassword = document.getElementById('newPassword').value;
    const confirmPassword = document.getElementById('confirmPassword').value;

    // Client-side validation
    let isValid = true;

    if( !currentPassword.length){
        document.getElementById('currentPasswordError').textContent = 'Type your current password';
        isValid = false;
    }
    

    if (newPassword.length < 8 || !/[a-zA-Z]/.test(newPassword) || !/\d/.test(newPassword)) {
        document.getElementById('newPasswordError').textContent = 'Password must be at least 8 characters long and contain both letters and numbers.';
        isValid = false;
    }

    if (newPassword !== confirmPassword) {
        document.getElementById('confirmPasswordError').textContent = 'Passwords do not match.';
        isValid = false;
    }

    if (!isValid) return;

    try {
        const response = await fetch('/changePassword', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ currentPassword, newPassword, confirmPassword }),
        });

        const result = await response.json();

        if (result.success) {
            await Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Password changed successfully',
                timer: 1000,
                showConfirmButton: false
            });
            window.location.reload()
        } else {
            if (result.error === 'current_password_incorrect') {
                document.getElementById('currentPasswordError').textContent = 'Current password is incorrect.';
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: result.message,
                });
            }
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'An unexpected error occurred. Please try again.',
        });
    }
});

function confirmLogout(event) {
        event.preventDefault(); // Prevent default link behavior

        Swal.fire({
            title: "Are you sure?",
            text: "You will be logged out!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, Logout"
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = "/logout"; // Redirect only if confirmed
            }
        });
    }

    function confirmForgotPassword() {
            Swal.fire({
                title: "Are you sure?",
                text: "You'll be logged out to reset your password.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes, proceed",
                cancelButtonText: "Cancel",
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6"
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = "/forgot-password-logout"; 
                }
            });
        }


</script>

<%- include('../partials/user/footer') %>
