<%- include('../partials/user/header') %>



<div class="container mx-auto px-4 py-6 bg-gray-900 text-gray-100">

    <h2 class="text-2xl font-bold text-amber-500 mb-6" style="margin-top: 100px;">My Orders</h2>

    <% if (orders.length===0) { %>
        <p class="text-gray-400">No orders placed yet.</p>
    <% } else { %>
        <!-- Order list -->
        <div class="space-y-6">
            <% orders.forEach(order=> { %>
                <div class="bg-gray-800 rounded-lg shadow-md overflow-hidden border border-amber-500/20">
                    <div class="p-4 border-b border-amber-500/20">
                        <div class="flex flex-col sm:flex-row sm:justify-between sm:items-center gap-3">

                            <span class="status-badge" style="<%= 
                            order.status === 'Pending' ? 'color: white; background-color: #3498db; font-size: 20px;':
                            order.status === 'Confirmed' ? 'color: white; background-color: blue;  font-size: 20px;' :
                            order.status === 'Shipped' ? 'color: white; background-color: orange;  font-size: 20px;' :
                            order.status === 'Delivered' ? 'color: white; background-color: green;  font-size: 20px;' :
                            order.status === 'Cancelled' ? 'color: white; background-color: pink;  font-size: 20px;' :
                            order.status === 'Return_Request' ? 'color: black; background-color: yellow;  font-size: 20px;' :
                            order.status === 'Returned' ? 'color: white; background-color: red; font-size: 20px;' :
                            'color: silver;  font-size: 20px; ' 
                          %>">
                            <%= order.status.toUpperCase() %>
                          </span>

                          <br>

                          <br>

                            <div>
                                <h6 class="font-bold text-lg text-amber-400">Order ID: <%= order.orderId %></h6>
                                <h6 class="text-gray-400"><strong>Date:</strong> <%= new Date(order.createdOn).toLocaleString() %></h6>                                
                              <h6>  Payment Method: <%= ( order.paymentMethod) %> </h6>

                              <br>
                            </div>
                            <div class="flex flex-wrap gap-2">                          

                              <% if (order.couponApplied === true) { %>
                                <h6>Coupon Code: <%= order.couponCode %></h6>
                                <h6>Coupon Amount: <%= order.discountAmount %></h6>
                                <br>
                              <% } %>

                              <h5>  Total: ₹<%= ( order.finalAmount).toFixed(2) %> </h5>
                              <h5>  Final Amount: ₹<%= ( order.finalAmount).toFixed(2) %> </h5>

                                <!-- <p class="font-semibold text-amber-400">Total: ₹<%= ( order.finalAmount + order.deliveryCharge).toFixed(2) %></p> -->
                            </div>
                        </div>
                    </div>

                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-amber-500/20">
                            <thead class="bg-gray-700" style="background-color: #ADD6FF;">
                                <tr>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-amber-400 uppercase tracking-wider" style="width: 50%; "  >Product</th>
                                    <th style="width: 50px;"></th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-amber-400 uppercase tracking-wider">Qty  </th>
                                    <th style="width: 50px;"></th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-amber-400 uppercase tracking-wider">Price</th>
                                    <th style="width: 50px;"></th>
                                    
                             
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-amber-400 uppercase tracking-wider">Total</th>
                                    <th style="width: 50px;"></th>
                                    <%if(order.status=='Cancelled' || order.status=='Delivered' ){%>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-amber-400 uppercase tracking-wider">Details</th>
                                    <%}%>
                                    <% if (order.status !=='Cancelled' && order.status !=='Delivered' && order.status !=='Return_Request' && order.status !=='Returned' ) { %>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-amber-400 uppercase tracking-wider">Action</th>
                                    <% } %>
                                </tr>

                            </thead>

                            
                            <tbody class="bg-gray-800 divide-y divide-amber-500/20">                               
                            
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-100">
                                        <img style="width: 100; height: 100px;" src="/<%= Array.isArray(order.product.photos) ? order.product.photos[0] : order.product.photos %>" >
                                        <%= order.product.name %>

                                    </td>
                                    <td style="width: 50px;"></td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400">
                                        <%= order.qty %>
                                    </td>
                                    <td style="width: 50px;"></td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400">
                                        ₹<%= order.product.salePrice.toFixed(2) %>
                                    </td>
                                    <td style="width: 50px;"></td>
                                 
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400">
                                        ₹<%= (order.finalAmount).toFixed(2) %>
                                    </td>
                                    <td style="width: 50px;"></td>
                                    <%if(order.status=='Cancelled' || order.status=='Delivered' ){%>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400">
                                            <a href="/orders/<%= order._id %>" class="text-amber-400 hover:text-amber-300">View Details</a>
                                        </td>
                                    <%}%>
                                    <% if (order.status !=='Cancelled' && order.status !=='Delivered' && order.status !=='Return_Request' && order.status !=='Returned' ) { %>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400">
                                            <button style="background-color: yellow;" onclick="cancelOrder('<%= order._id %>')" class="text-red-400 hover:text-red-300">Cancel</button>
                                        </td>
                                    <% } if ( order.status ==='Delivered' ) { %>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400";>
                                            <button style=" margin-left: 20px;" onclick="returnOrder('<%= order._id %>')" class="text-purple-400 hover:text-purple-300">Return Order</button>
                                        </td>
                                    <% } %>
                                </tr>
                            </tbody>
                        </table>
                    </div>


                    <br>

                </div>
            <% }) %>
        </div>

        <br>


<!-- Pagination controls -->
<% if (totalPages > 1) { %>
    <div class="row flex justify-between items-center bg-red-500 p-2">
        <div>
            <% if (currentPage > 1) { %>
                <a href="/orderHistory?page=<%= currentPage - 1 %>&limit=<%= limit %>" class="px-4 py-2 border border-amber-500/50 rounded-md text-sm font-medium text-amber-400 hover:bg-amber-500/10">Previous</a>
            <% } else { %>
                <span class="px-4 py-2 border border-amber-500/20 rounded-md text-sm font-medium text-amber-500/50 cursor-not-allowed">Previous</span>
            <% } %>
        </div>
        
        <div class="text-center">
            Page <%= currentPage %> of <%= totalPages %>
        </div>
        
        <div>
            <% if (currentPage < totalPages) { %>
                <a href="/orderHistory?page=<%= currentPage + 1 %>&limit=<%= limit %>" class="px-4 py-2 border border-amber-500/50 rounded-md text-sm font-medium text-amber-400 hover:bg-amber-500/10">Next</a>
            <% } else { %>
                <span class="px-4 py-2 border border-amber-500/20 rounded-md text-sm font-medium text-amber-500/50 cursor-not-allowed">Next</span>
            <% } %>
        </div>
    </div>
<% } %>



    <% } %>

    
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>




    <script>
        async function cancelOrder(orderId) {
            const { value: reason } = await Swal.fire({
                title: 'Cancel Order',
                input: 'select',
                inputOptions: {
                    'Ordered by mistake': 'Ordered by mistake',
                    'Found a better price': 'Found a better price',
                    'Delivery taking too long': 'Delivery taking too long',
                    'Other': 'Other'
                },
                inputPlaceholder: 'Select a reason',
                showCancelButton: true
            });

            if (!reason) {
                return;
            }

            let finalReason = reason;

            if (reason === 'Other') {
                const { value: customReason } = await Swal.fire({
                    title: 'Other Reason',
                    input: 'textarea',
                    inputLabel: 'Please specify your reason',
                    inputPlaceholder: 'Type your reason here...',
                    showCancelButton: true,
                    inputValidator: (value) => {
                        if (!value) {
                            return 'You need to provide a reason!';
                        }
                    }
                });

                if (!customReason) {
                    return;
                }
                finalReason = customReason;
            }

            try {
                const response = await fetch('/orders/cancel', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ orderId, reason: finalReason }),
                });

                const data = await response.json();

                if (data.success) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Order cancelled successfully',
                        timer: 1500
                    });
                    location.reload();
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                await Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to cancel order'
                });
            }
        }


        async function returnOrder(orderId) {
            const { value: reason } = await Swal.fire({
                title: 'ReturnOrder',
                input: 'select',
                inputOptions: {
                    'Order by Mistake': 'Order by Mistake',
                    'Changed my mind': 'Changed my mind',
                    'Other': 'Other'
                },
                inputPlaceholder: 'Select a reason',
                showCancelButton: true
            });

            if (!reason) {
                return;
            }

            let finalReason = reason;

            if (reason === 'Other') {
                const { value: customReason } = await Swal.fire({
                    title: 'Other Reason',
                    input: 'textarea',
                    inputLabel: 'Please specify your reason',
                    inputPlaceholder: 'Type your reason here...',
                    showCancelButton: true,
                    inputValidator: (value) => {
                        if (!value) {
                            return 'You need to provide a reason!';
                        }
                    }
                });

                if (!customReason) {
                    return;
                }
                finalReason = customReason;
            }

            try {
                const response = await fetch('/orders/retun', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ orderId, reason: finalReason }),
                });

                const data = await response.json();

                if (data.success) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: data.message,
                        timer: 1500
                    });
                    location.reload();
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                await Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to return order'
                });
            }
        }


        const limitSelect = document.getElementById('limitSelect');
        if (limitSelect) {
            limitSelect.addEventListener('change', function () {
                const limit = this.value;
                window.location.href = `/orderHistory?page=1&limit=${limit}`;
            });
        }
    </script>
    <%- include('../partials/user/footer') %>