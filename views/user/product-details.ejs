<%- include('../partials/user/header') %>

<style>
    body {
        font-family: Arial, sans-serif;
    }

    .thumb img {
       width: 150px;  
       height: auto;  
       object-fit: cover; 
   }

   .thumbRelated img {
       width: 150px;  
       height: auto;  
       object-fit: cover; 
   }

   .thumb {
       display: flex;
       justify-content: center;
       align-items: center;
       flex-direction: column;
       text-align: center;
       margin: 10px;
   }

   .single-related-product {
       display: flex;
       align-items: center;
       gap: 10px; 
   }

    .gallery {
        display: flex;
        gap: 20px;
        padding: 20px;
    }
    .thumbnails {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }
    .thumbnails img {
        width: 80px;
        height: 80px;
        cursor: pointer;
        border: 2px solid transparent;
    }
    .thumbnails img:hover {
        border: 2px solid blue;
    }
    .preview {
        flex-grow: 1;
    }
    .zoom-container {
        width: 400px;
        height: 400px;
        overflow: hidden;
        border: 1px solid #ddd;
    }
    .zoom-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease, transform-origin 0.3s ease;
    }

	.s_product_inner {
		display: flex;
		align-items: flex-start; /* Align items at the top */
		gap: 30px;
   	}	

	   .card_area button {
    border-radius: 20px; /* Makes buttons rounded */
    padding: 10px 20px; /* Adds padding */
    margin-right: 10px; /* Adds gap between buttons */
    border: none; /* Removes default border */
    background-color: #007bff; /* Example color */
    color: white; /* Text color */
    cursor: pointer;
}

	.card_area button:last-child {
		margin-right: 0; /* Removes margin from the last button */
	}

	.card_area {
		gap: 15px; /* Adds gap between flex items */
	}

</style>

<div class="product_image_area">

    <div class="container" >

        <div id="galleryDiv" class="row s_product_inner">

            <div class="gallery"  style="width: 50%;">
                <div class="thumbnails">
                    <% product.photos.forEach(photo => { %>
                        <img src="/<%= photo %>" class="thumb" data-large="/<%= photo %>">
                    <% }) %>
                </div>
                <div class="preview" style="cursor: crosshair;">
                    <div class="zoom-container">
                        <img id="largeImage" src="/<%= product.photos[0] %>" class="zoom-image">
                    </div>
                </div>
            </div>   
			
			

				<!-- // Product Details Start -->
	<div class="col-lg-5 ">
		<div class="s_product_text" style="margin-top: 20px">
			<h2><%= product.name %></h2>
			<h2>₹ <%= Math.round(product.salePrice) %>.00</h2>
			<h6 style="text-decoration: line-through; color: #ccc;">₹ <%= product.regularPrice %>.00</h6>
			<ul class="list">
				<li><span>Category</span>: <%= product.category.name %></li>
				<li><span>Availability</span>: <span style="color: <%= product.stock >= 1 ? 'green' : 'red' %>"><%= product.stock >= 1 ? 'In Stock' : 'No Stock' %></span></li>
			</ul>
			<p><%= product.description %></p>

			
			<div class="card_area d-flex align-items-center gap-3">
				<button class="btn btn-primary rounded-pill" onclick="addToCart('<%= product._id %>')">Add to Cart</button>
				<button class="btn btn-danger rounded-pill" onclick="addToWishlist('<%= product._id %>')"
                    data-product-id="<%= product._id %>" >
                    Add to Wishlist
                </button>
                <!-- <a href="/cart" class="btn btn-success rounded-pill">Buy Now</a> -->
			</div>


			</div>
		</div>
	</div>
 </div>


 <hr>



 	<!-- Start related-product Area -->
	 <section class="related-product-area section_gap_bottom"  style="margin-top: 100px; margin-bottom: 100px;">
		<div class="container">
			<div class="row justify-content-center">
				<div class="col-lg-12 text-center">
					<div class="section-title">
						<h1>Related Products</h1>
						<p>Explore our range of related products that complement your purchase. Each item is carefully selected to ensure the highest quality and satisfaction.</p>
					</div>
				</div>
			</div>
			<div class="row">
				<div class="col-lg-12">

					<div class="row" style=" display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Responsive grid */
                    gap: 100px; /* Space between items */
                    justify-content: center;
                    padding: 20px;">

						<%for(let i=0;i< products.length; i++){%>

						<div class="thumbRelated single-related-product">
                            
							<div class="single-related-product d-flex">

								<a href="/productDetails?id=<%=products[i]._id%>">
                                    <img src="<%= products[i].photos[0] %>" alt="">
                                </a>

								<div class="desc">
									<a href="#" class="title"><%= products[i].name.split('|')[0] %></a>
									<div class="price">
										<h6 class="l-through">₹ <%=products[i].salePrice%></h6>
									</div>
								</div>
							</div>
						</div>

						<%}%>
						
					</div>
				</div>
				<div class="col-lg-3">
					<div class="ctg-right">
						<a href="#" target="_blank">
							<img class="img-fluid d-block mx-auto" src="img/category/c5.jpg" alt="">
						</a>
					</div>
				</div>
			</div>
		</div>
	</section>
	<!-- End related-product Area -->

	




</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>

            // Add to wishlist function
    function addToWishlist(productId) {

    fetch('/addToWishlist', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            productId: productId
        })
    })
        .then(response => response.json())
        .then(data => {
            if (data.status) {
                Swal.fire({
                    title: 'Added to Wishlist',
                    text: 'The product has been added to your wishlist',
                    icon: 'success',
                    timer: 2000
                });
            } else {
                Swal.fire({
                    title: 'Already in Wishlist',
                    text: data.message,
                    icon: 'info',
                    timer: 2000
                });
            }
        })
        .catch(error => {
            Swal.fire({
                title: 'Error',
                text: 'There was an error adding the product to your wishlist',
                icon: 'error',
                timer: 2000
            });
        });
    }





    function addToCart(productId) {
 
    Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to add this product to your cart?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, add it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/addToCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    productId: productId
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: 'Added!',
                            text: 'Item has been added to your cart.',
                            icon: 'success',
                            timer: 2000
                        });
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: data.message || 'Could not add item to cart.',
                            icon: 'error',
                            timer: 2000
                        });
                    }
                })
                .catch(error => {
                    console.error('Error adding item to cart:', error);
                    Swal.fire({
                        title: 'Error!',
                        text: 'Something went wrong.',
                        icon: 'error',
                        timer: 2000
                    });
                });
        }
    });
    }


    document.querySelectorAll('.thumb').forEach(thumb => {
        thumb.addEventListener('mouseenter', function () {
            document.getElementById('largeImage').src = this.getAttribute('data-large');
        });
    });

    document.querySelector(".zoom-container").addEventListener("mousemove", function (e) {
        const rect = this.getBoundingClientRect();
        const x = (e.clientX - rect.left) / rect.width * 100;
        const y = (e.clientY - rect.top) / rect.height * 100;
        document.querySelector(".zoom-image").style.transformOrigin = `${x}% ${y}%`;
        document.querySelector(".zoom-image").style.transform = "scale(2)";
    });

    document.querySelector(".zoom-container").addEventListener("mouseleave", function () {
        document.querySelector(".zoom-image").style.transform = "scale(1)";
    });
</script>

<%- include('../partials/user/footer') %>