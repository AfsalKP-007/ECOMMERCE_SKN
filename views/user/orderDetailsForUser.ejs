
  <style>
    .order-details-container {
      max-width: 800px;
      margin: 2rem auto;
      background: #fff;
      color: #333;
      padding: 2rem;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .section {
      margin-bottom: 1.5rem;
    }

    .section h2 {
      font-size: 1.5rem;
      font-weight: 600;
      border-bottom: 2px solid #3498db;
      padding-bottom: 0.5rem;
      margin-bottom: 1rem;
    }

    .order-summary p,
    .item-details p,
    .order-address p {
      margin: 0.5rem 0;
      font-size: 1rem;
    }

    .item {
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .item img {
      width: 150px;
      height: 150px;
      object-fit: cover;
      border-radius: 4px;
    }

    .btn {
      display: inline-block;
      padding: 0.75rem 1.5rem;
      background: #3498db;
      color: #fff;
      text-decoration: none;
      border-radius: 4px;
      margin-top: 1rem;
      margin-right: 1rem;
      cursor: pointer;
      border: none;
      font-size: 1rem;
    }

    .btn:hover {
      background: #2980b9;
    }
  </style>


<body>
    

  <div class="order-details-container" id="orderDetails">
    <!-- Item Details Section -->
    <div class="section order-item">
      <h2>Order Details</h2>
      <h6>Order Id : <%= order.orderId %>
      </h6>
      <div class="item">
        <img src="/<%= Array.isArray(order.product.photos) ? order.product.photos[0] : order.product.photos %>" >
        <div class="item-details">
          <p><strong>Product:</strong>
            <%= order.product.name %>
          </p>
          <p><strong>Qty:</strong>
            <%= order.qty %>
          </p>
          <p><strong>Price:</strong> ₹<%= order.price.toFixed(2) %>
          </p>
          <p><strong>Total Price:</strong> ₹<%= order.totalPrice.toFixed(2) %>
          </p>
          <p><strong>Delivery Charge::</strong> ₹<%= order.deliveryCharge.toFixed(2) %>
          </p>
          <% if (order.discount> 0) { %>
            <p><strong>Discount:</strong> ₹<%= order.discount.toFixed(2) %>
            </p>
            <% } %>
              <p><strong>Final Price:</strong> ₹<%= (order.totalPrice  + order.deliveryCharge).toFixed(2) %>
              </p>
              <p><strong>Order status:</strong>
                <%= order.status %>
              </p>
        </div>
      </div>
    </div>

    <!-- Shipping Address Section -->
    <div class="section order-address">
      <h2>Shipping Address</h2>
      <% if (order.address) { %>
        <p><strong>Name:</strong>
          <%= order.address.name %>
        </p>
        <p><strong>Landmark:</strong>
          <%= order.address.landMark %>
        </p>
        <p><strong>City:</strong>
          <%= order.address.city %>
        </p>
        <p><strong>State:</strong>
          <%= order.address.state %>
        </p>
        <p><strong>PIN:</strong>
          <%= order.address.pincode %>
        </p>
        <p><strong>Country:</strong> India</p>
        <% } else { %>
          <p>No shipping address provided.</p>
          <% } %>
    </div>

    <!-- Buttons -->
    <a href="/orderHistory" class="btn">Back to Order History</a>

    <button id="downloadBtn" class="btn" onclick="confirmDownload()" style="background-color: orange;">Download as PDF</button>
  </div>


 
  </body>

  
  
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  
  
  <script>


function confirmDownload() {
  Swal.fire({
    title: 'Are you sure?',
    text: "Do you want to download this order as PDF?",
    icon: 'question',
    showCancelButton: true,
    confirmButtonColor: '#3085d6',
    cancelButtonColor: '#d33',
    confirmButtonText: 'Yes, download it!'
}).then((result) => {
    if (result.isConfirmed) {
      downloadPDF(); // <-- Your original function
    }
  }).then(() =>{
    Swal.fire({
    title: 'Downloaded!',
    text: 'Your order has been downloaded successfully.',
    icon: 'success',
    timer: 1500
  });
});
}


        function downloadPDF () {

        const orderData = {
            name: <%- JSON.stringify(order.product.name) %>,
            createdOn: <%- JSON.stringify(order.createdOn) %>,
            qty: <%= order.qty %>,
            price: <%= order.price.toFixed(2) %>,
            totalPrice: <%= order.totalPrice.toFixed(2) %>,
            deliveryCharge: <%= order.deliveryCharge.toFixed(2) %>,
            discount: <%= order.discount || 0 %>,
            finalAmount: <%= (order.totalPrice  +  order.deliveryCharge).toFixed(2) %>,
            imageUrl: <%- JSON.stringify(baseUrl + "/" + (Array.isArray(order.product.photos) ? order.product.photos[0] : order.product.photos)) %>,
            address: {
            name: <%- order.address ? JSON.stringify(order.address.name) : '""' %>,
            landMark: <%- order.address ? JSON.stringify(order.address.landMark) : '""' %>,
            city: <%- order.address ? JSON.stringify(order.address.city) : '""' %>,
            state: <%- order.address ? JSON.stringify(order.address.state) : '""' %>,
            pincode: <%- order.address ? JSON.stringify(order.address.pincode) : '""' %>,
            },
            orderId: <%- JSON.stringify(order.orderId) %>,
            status: <%- JSON.stringify(order.status) %> 
        };

        if (typeof jspdf !== 'undefined' && jspdf.jsPDF) {
            const { jsPDF } = jspdf;
            const doc = new jsPDF({
            orientation: 'portrait',
            unit: 'mm',
            format: 'a4'
            });

            const margin = 20;
            const pageWidth = 210; 
            const containerWidth = pageWidth - 2 * margin;

            doc.setFillColor(255, 255, 255);
            doc.setDrawColor(211, 224, 234); 
            doc.setLineWidth(0.3);
            doc.roundedRect(margin, margin, containerWidth, 300, 5, 5, 'FD');

            let yPos = margin + 10;

            doc.setFont('helvetica', 'bold');
            doc.setFontSize(16);
            doc.setTextColor(0, 0, 0); 
            doc.text('Skin.Fit', margin + 10, yPos);
            yPos += 15;
            
            doc.setFont('helvetica', 'bold');
            doc.setFontSize(16);
            doc.setTextColor(0, 0, 0); 
            doc.text('Details', margin + 10, yPos);
            
            yPos += 5
            
            doc.setDrawColor(211, 224, 234); 
            doc.line(margin + 10, yPos, margin + 160, yPos);
            yPos += 5;
            
            // IMAGE
            if (orderData.imageUrl) {
                try {
                    doc.addImage(orderData.imageUrl, 'JPEG', margin + 10, yPos, 50, 50);
                } catch (error) {
                    console.error("Failed to load image:", error);
                }
            }
            
            // Move yPos below image
            yPos += 60;
            
            const textX = margin + 10;
            doc.setFontSize(12);
            
            const date = new Date(orderData.createdOn);
            const formattedDate = date.toLocaleDateString("en-GB")
            

            
            doc.setFont('helvetica', 'bold');
            doc.text('Product:', textX, yPos);
            doc.setFont('helvetica', 'normal');
            doc.text(orderData.name, textX + 40, yPos);            

            yPos += 10;
            
            doc.setFont('helvetica', 'bold');
            doc.text('Date:', textX, yPos);
            doc.setFont('helvetica', 'normal');
            doc.text(formattedDate, textX + 40, yPos);
            
       
            yPos += 10;
            doc.setFont('helvetica', 'bold');
            doc.text('Qty:', textX, yPos);
            doc.setFont('helvetica', 'normal');
            doc.text(orderData.qty.toString(), textX + 40, yPos);
            
            yPos += 10;
            doc.setFont('helvetica', 'bold');
            doc.text('Price:', textX, yPos);
            doc.setFont('helvetica', 'normal');
            doc.text(`Rs.${orderData.price}`, textX + 40, yPos);
            
            yPos += 10;
            doc.setFont('helvetica', 'bold');
            doc.text('Total Price:', textX, yPos);
            doc.setFont('helvetica', 'normal');
            doc.text(`Rs.${orderData.totalPrice}`, textX + 40, yPos);

            yPos += 10;
            doc.setFont('helvetica', 'bold');
            doc.text('Delivery Charge:', textX, yPos);
            doc.setFont('helvetica', 'normal');
            doc.text(`Rs.${orderData.deliveryCharge}`, textX + 40, yPos);

            if (orderData.discount > 0) {
            yPos += 10;
            doc.setFont('helvetica', 'bold');
            doc.text('Discount:', textX, yPos);
            doc.setFont('helvetica', 'normal');
            doc.text(`Rs.${orderData.discount.toFixed(2)}`, textX + 40, yPos);
        }
        
        yPos += 10;
        doc.setFont('helvetica', 'bold');
        doc.text('Final Price:', textX, yPos);
        doc.setFont('helvetica', 'normal');
        doc.text(`Rs.${orderData.finalAmount}`, textX + 40, yPos);

        yPos += 10;
        doc.setFont('helvetica', 'bold');
        doc.text('Order status:', textX, yPos);
        doc.setFont('helvetica', 'normal');
        doc.text(`${orderData.status}`, textX + 40, yPos);
        
        // ADDRESS SECTION
        yPos += 15;
        doc.setFont('helvetica', 'bold');
        doc.setFontSize(16);
        doc.text('SHIPPING ADDRESS', margin + 10, yPos);
        yPos += 5;
        doc.setDrawColor(211, 224, 234); 
        doc.line(margin + 10, yPos, margin + 160, yPos); 
        
        yPos += 10;
        doc.setFontSize(12);
        doc.setFont('helvetica', 'bold');
        doc.text('Name:', margin + 10, yPos);
        doc.setFont('helvetica', 'normal');
        doc.text(orderData.address.name || 'N/A', margin + 40, yPos);
        
        yPos += 10;
        doc.setFont('helvetica', 'bold');
        doc.text('Landmark:', margin + 10, yPos);
        doc.setFont('helvetica', 'normal');
        doc.text(orderData.address.landMark || 'N/A', margin + 40, yPos);
        
        yPos += 10;
        doc.setFont('helvetica', 'bold');
            doc.text('City:', margin + 10, yPos);
            doc.setFont('helvetica', 'normal');
            doc.text(orderData.address.city || 'N/A', margin + 40, yPos);
            
            yPos += 10;
            doc.setFont('helvetica', 'bold');
            doc.text('State:', margin + 10, yPos);
            doc.setFont('helvetica', 'normal');
            doc.text(orderData.address.state || 'N/A', margin + 40, yPos);
            
            yPos += 10;
            doc.setFont('helvetica', 'bold');
            doc.text('PIN:', margin + 10, yPos);
            doc.setFont('helvetica', 'normal');
            doc.text(orderData.address.pincode || 'N/A', margin + 40, yPos);

            yPos += 10;
            doc.setFont('helvetica', 'bold');
            doc.text('Country:', margin + 10, yPos);
            doc.setFont('helvetica', 'normal');
            doc.text('INDIA', margin + 40, yPos); 
            
            doc.save(`order_${orderData.orderId}.pdf`);
        } else {
            console.error("jsPDF is not loaded correctly.");
        }
    }

    </script>
    
    
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.23/jspdf.plugin.autotable.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    
